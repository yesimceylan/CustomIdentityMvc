@using Reservation.mvcproject.ViewModels;
@model LoginVM

@{
    ViewData["Title"] = "Login";
    Layout = "_LoginLayout";
}
<style>
    h6 {
        color: brown;
    }

    #additionalInput {
        width: 100px;
        height: 40px;
        border: 2px solid black;
    }
</style>
<div class="row d-flex align-items-center justify-content-center">
    <div class="col-md-3 card p-3">
        <h2 class="text-center text-info">Login</h2>
        <form id="loginForm" asp-action="Login" method="post" asp-route-returnurl="@ViewData["ReturnUrl"]">
            <div id="validationSummary" class="text-danger"></div> 
            <div class="mb-1">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="mb-1">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="mb-1 form-check">
                <label class="form-check-label">
                    <input asp-for="RememberMe" class="form-check-input" /> @Html.DisplayNameFor(a => a.RememberMe)
                </label>
            </div>

            <br />

            <div class="form-group row">
                <div class="col">
                    <div id="verificationCodeSection" class="mb-1" style="display: none;">
                        <label for="verificationCode" style="font-weight: bold;">Verification Code:</label>
                        <input asp-for="VerificationCode" type="text" maxlength="6" id="verificationCode" name="VerificationCode" class="form-control">
                        <span asp-validation-for="VerificationCode" class="text-danger"></span>
                    </div>
                </div>
                <div class="col">
                    <div id="timerSection" style="display: none; font-weight: bold;">
                        <p id="timerDisplay"></p>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-8">
                    <a asp-action="Register" class="text-decoration-none float-start mt-2" asp-route-returnurl="@ViewData["ReturnUrl"]">Don't have account?</a>
                </div>
                <div class="col-4">
                    <button type="submit" id="loginButton" class="btn btn-primary btn-sm float-end">Login</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#loginForm").submit(function (event) {
                event.preventDefault();

                var formData = $(this).serialize();

                $.ajax({
                    type: "POST",
                    url: $(this).attr("action"),
                    data: formData,
                    success: function (response) {
                        $("#validationSummary").empty();
                        if (response.showVerificationCode) {
                            $("#verificationCodeSection").show();
                            $("#timerSection").show();
                            $("#loginButton").val("Verify");
                            startTimer(120);
                        } else if (response.redirectUrl) {
                            window.location.href = response.redirectUrl;
                        } else {

                            if (response.errors) {
                                for (var key in response.errors) {
                                    if (response.errors.hasOwnProperty(key)) {
                                        var errorElement = $("span[data-valmsg-for='" + key + "']");
                                        errorElement.text(response.errors[key].join(", "));
                                    }
                                }
                            }
                            if (response.generalErrors) {
                                response.generalErrors.forEach(function (error) {
                                    $("#validationSummary").append("<p>" + error + "</p>");
                                });
                            }
                        }
                    }
                });
            });

            function startTimer(duration) {
                var timerDisplay = $("#timerDisplay");
                var timer = duration, minutes, seconds;
                setInterval(function () {
                    minutes = parseInt(timer / 60, 10);
                    seconds = parseInt(timer % 60, 10);

                    minutes = minutes < 10 ? "0" + minutes : minutes;
                    seconds = seconds < 10 ? "0" + seconds : seconds;

                    timerDisplay.text(minutes + ":" + seconds);

                    if (--timer < 0) {
                        window.location.href = '@Url.Action("Login", "Account")';
                    }
                }, 1000);
            }
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

